name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest -q

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login (optional)
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build API image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/api/dockerfile
          push: false
          tags: kindle_api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Trainer image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/trainer/dockerfile
          push: false
          tags: kindle_trainer:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: API container smoke test
        run: |
          docker run -d --rm --name api-smoke -p 8000:8000 -v "$GITHUB_WORKSPACE/model:/app/model:ro" kindle_api:${GITHUB_SHA}
          for i in {1..30}; do
            curl -sf http://localhost:8000/health && break || sleep 2;
          done
          curl -sf http://localhost:8000/metadata | jq '.model_info.best_model' || true
        shell: bash

      - name: Stop API container
        if: always()
        run: docker rm -f api-smoke || true

      - name: Trivy scan API image
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: kindle_api:${{ github.sha }}
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Trivy scan Trainer image
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: kindle_trainer:${{ github.sha }}
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Tag and push (optional)
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        run: |
          OWNER=${{ secrets.DOCKERHUB_USERNAME }}
          API_TAG=$OWNER/kindle_api:${GITHUB_SHA}
          TRAIN_TAG=$OWNER/kindle_trainer:${GITHUB_SHA}
          docker tag kindle_api:${GITHUB_SHA} $API_TAG
          docker tag kindle_trainer:${GITHUB_SHA} $TRAIN_TAG
          docker push $API_TAG
          docker push $TRAIN_TAG
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            docker tag $API_TAG $OWNER/kindle_api:latest
            docker tag $TRAIN_TAG $OWNER/kindle_trainer:latest
            docker push $OWNER/kindle_api:latest
            docker push $OWNER/kindle_trainer:latest
          fi
